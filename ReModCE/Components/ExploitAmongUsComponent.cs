using System;
using ReModAres.Core;
using ReModAres.Core.Managers;
using ReModAres.Core.UI.QuickMenu;
using ReModCE_ARES.Loader;
using UnityEngine;
using VRC;
using VRC.Udon;
using VRC.Udon.Common.Interfaces;

namespace ReModCE_ARES.Components
{
    internal class ExploitAmongUsComponent : ModComponent
    {

        public ExploitAmongUsComponent()
        {

        }

        public override void OnUiManagerInit(UiManager uiManager)
        {
            base.OnUiManagerInit(uiManager);

            var menu = uiManager.MainMenu.GetMenuPage("ARES");
            var subMenu = menu.GetMenuPage("World Cheats");
            var cheatMenu = subMenu.AddMenuPage("Among Us","Among us cheats", ResourceManager.GetSprite("remodce.world"));

            cheatMenu.AddButton($"Start Game", "Start game", StartGame, ResourceManager.GetSprite("remodce.start"));

            cheatMenu.AddButton($"Abort Game", "End the amongus game",EndGame, ResourceManager.GetSprite("remodce.stopgame"));

            cheatMenu.AddButton($"Complete all Tasks", "Completes all the player tasks", CompleteTasks, ResourceManager.GetSprite("remodce.udon"));

            cheatMenu.AddButton($"Bystanders Win", "Set Bystanders As The Winners", BystandersWin, ResourceManager.GetSprite("remodce.win"));

            cheatMenu.AddButton($"Murder Win", "Murder Win", MurderWin, ResourceManager.GetSprite("remodce.win"));

            cheatMenu.AddButton($"Call Meeting", "Call a Meeting", CallMeeting, ResourceManager.GetSprite("remodce.meet"));

            cheatMenu.AddButton($"Skip Vote", "Skip Vote", SkipVote, ResourceManager.GetSprite("remodce.next"));

            cheatMenu.AddButton($"Close Voting", "Close Voting", CloseVoting, ResourceManager.GetSprite("remodce.exit-door"));

            cheatMenu.AddButton($"Report Body", "Report Body", ReportBody, ResourceManager.GetSprite("remodce.arms-up"));

            cheatMenu.AddButton($"Kill All", "Kill all players", KillAllPlayers, ResourceManager.GetSprite("remodce.skull"));           
        }

        public void EndGame()
        {
            ReLogger.Msg("Game Aborted!");
            ReModCE_ARES.LogDebug("Game Aborted!");
            AmongUsCheat("SyncAbort");
        }
        public void BystandersWin()
        {
            ReLogger.Msg("Game Ended And Set Bystanders As The Winners");
            ReModCE_ARES.LogDebug("Game Ended And Set Bystanders As The Winners");
            AmongUsCheat("SyncVictoryB");
        }

        public void CallMeeting()
        {
            ReLogger.Msg("Called Meeting");
            ReModCE_ARES.LogDebug("Called Meeting");
            AmongUsCheat("StartMeeting");
        }

        public void CloseVoting()
        {
            ReLogger.Msg("Closed Voting");
            ReModCE_ARES.LogDebug("Closed Voting");
            AmongUsCheat("SyncCloseVoting");
        }

        public void KillAllPlayers()
        {
            ReLogger.Msg("Killed Everyone");
            ReModCE_ARES.LogDebug("Killed Everyone");
            AmongUsCheat("KillLocalPlayer");
        }

        public void MurderWin()
        {
            ReLogger.Msg("Game Ended And The Murder is The Winner");
            ReModCE_ARES.LogDebug("Game Ended And The Murder is The Winner");
            AmongUsCheat("SyncVictoryM");
        }

        public void ReportBody()
        {
            ReLogger.Msg("Reported Body");
            ReModCE_ARES.LogDebug("Reported Body");
            AmongUsCheat("OnBodyWasFound");
        }

        public void SkipVote()
        {
            ReLogger.Msg("Voting Skipped");
            ReModCE_ARES.LogDebug("Voting Skipped");
            AmongUsCheat("Btn_SkipVoting");
        }

        public void StartGame()
        {
            ReLogger.Msg("Started The Game");
            ReModCE_ARES.LogDebug("Started The Game");
            AmongUsCheat("Btn_Start");
        }

        public void CompleteTasks()
        {
            ReLogger.Msg("All Tasks Completed");
            ReModCE_ARES.LogDebug("All Tasks Completed");
            AmongUsCheat("OnLocalPlayerCompletedTask");
        }

        public void Blank()
        {
            ReLogger.Msg("");
            ReModCE_ARES.LogDebug("");
            AmongUsCheat("");
        }

        public static void AmongUsCheat(string udonEvent)
        {
            if (!RoomManager.Method_Public_Static_String_0().Contains(""))
            {
                return;
            }
            foreach (GameObject item in Resources.FindObjectsOfTypeAll<GameObject>())
            {
                if (item.name.Contains("Game Logic"))
                {
                    item.GetComponent<UdonBehaviour>().SendCustomNetworkEvent(NetworkEventTarget.All, udonEvent);
                }
            }
        }
    }
}
